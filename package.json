{
  "name": "wigly",
  "version": "0.2.0",
  "main": "dist/es5.js",
  "scripts": {
    "start": "parcel example/index.html",
    "build": "npm-run-all build:pre-clean build:tsickle build:gcc build:gzip build:types build:post-clean",
    "build:pre-clean": "rm -rf dist && mkdir dist",
    "build:types": "tsc -d && cp src/main.d.ts dist/es6.d.ts && mv src/main.d.ts dist/es5.d.ts",
    "build:tsickle": "tsickle --externs externs/main.js",
    "build:gcc": "npm-run-all build:gcc:es5 build:gcc:es6",
    "build:gcc:es5": "node_modules/google-closure-compiler-linux/compiler --externs externs/main.js --output_wrapper '(function(){var self=typeof module!=\"undefined\"?module.exports:(this.wigly={});%output%})()' --use_types_for_optimization --assume_function_wrapper --formatting SINGLE_QUOTES --module_resolution WEBPACK --language_in=ECMASCRIPT_NEXT --language_out=ECMASCRIPT5 --compilation_level ADVANCED_OPTIMIZATIONS --js_output_file=dist/es5.js 'src/**.js'",
    "build:gcc:es6": "node_modules/google-closure-compiler-linux/compiler --externs externs/main.js --output_wrapper '(()=>{let self=typeof module!=\"undefined\"?module.exports:(this.wigly={});%output%})()' --use_types_for_optimization --assume_function_wrapper --formatting SINGLE_QUOTES --module_resolution WEBPACK --language_in=ECMASCRIPT_NEXT --language_out=ECMASCRIPT6 --compilation_level ADVANCED_OPTIMIZATIONS --js_output_file=dist/es6.js 'src/**.js'",
    "build:gzip": "gzip dist/* -k -f",
    "build:post-clean": "rm src/**.js",
    "test": "ava",
    "size": "wc -c dist/es5.js.gz | cut -d' ' -f1 && wc -c dist/es6.js.gz | cut -d' ' -f1"
  },
  "devDependencies": {
    "@babel/plugin-transform-react-jsx": "^7.0.0",
    "ava": "^1.0.0-rc.1",
    "browser-env": "^3.2.5",
    "google-closure-compiler-linux": "^20181008.0.0",
    "navaid": "^1.0.0",
    "npm-run-all": "^4.1.3",
    "parcel-bundler": "^1.10.3",
    "redux": "^4.0.1",
    "redux-devtools-extension": "^2.13.5",
    "tsickle": "^0.33.1",
    "typescript": "^3.1.3"
  },
  "ava": {
    "babel": {
      "testOptions": {
        "plugins": [
          [
            "@babel/plugin-transform-react-jsx",
            {
              "pragma": "h"
            }
          ]
        ]
      }
    }
  }
}
